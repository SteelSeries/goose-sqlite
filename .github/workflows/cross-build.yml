name: Cross-Build

on:
  push:
    branches:
      - master
  pull_request:
    branches: 
      - master

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        goos: ['windows', 'darwin']
        go: ['1.13']
    name: Build
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
    
    - name: Print Go version and environment
      id: vars
      run: |
        printf "Using go at: $(which go)\n"
        printf "Go version: $(go version)\n"
        printf "\n\nGo environment:\n\n"
        go env
        printf "\n\nSystem environment:\n\n"
        env
        echo "::set-output name=go_cache::$(go env GOCACHE)"
        
    - name: Checkout code into the Go module directory
      uses: actions/checkout@v2
      
    - name: Run Build
      env:
        CGO_ENABLED: 0
        GOOS: ${{ matrix.goos }}
      shell: bash
      continue-on-error: true
      working-directory: .
      run: |
        GOOS=$GOOS go build 2> /dev/null
        if [ $? -ne 0 ]; then
          echo "::warning ::$GOOS Build Failed"
          exit 0
        fi