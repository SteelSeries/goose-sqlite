trigger: 
  tags:
    include:
    - v*

pr: none

pool:
   vmImage: 'macOS-latest'

steps: 
- task: GoTool@0
  inputs:
    version: '1.13'
- task: Go@0
  inputs:
    command: 'get'
    arguments: '-d'
    workingDirectory: '$(System.DefaultWorkingDirectory)'
- bash: |
    brew install mingw-w64
  displayName: 'Get CGO Dependencies'
- bash: |
    CGO_ENABLED=1 GOARCH=amd64 GOOS=windows CC=x86_64-w64-mingw32-gcc CXX=x86_64-w64-mingw32-g++ go build -ldflags "-s -w" -o goose-sqlite.exe
    zip goose-sqlite-windows-x64 goose-sqlite.exe
    mv goose-sqlite-windows-x64.zip $(Build.ArtifactStagingDirectory)
  displayName: 'Build Windows Artifacts'
- bash: |
    CGO_LDFLAGS="-L/usr/lib" CGO_ENABLED=1 GOARCH=amd64 GOOS=darwin CC=clang CXX=clang++ go build -ldflags "-s -w -linkmode=external" -o goose-sqlite
    zip goose-sqlite-macos-x64 goose-sqlite
    mv goose-sqlite-macos-x64.zip $(Build.ArtifactStagingDirectory)
  displayName: 'Build MacOS Artifacts'
- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'GitHub'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'gitTag'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'
    assets: |
      $(Build.ArtifactStagingDirectory)/*.zip